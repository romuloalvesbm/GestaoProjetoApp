// <auto-generated />
using System;
using GestaoProjeto.Infra.Data.Context;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace GestaoProjeto.Infra.Data.Migrations
{
    [DbContext(typeof(DataContext))]
    [Migration("20240610190350_Initial")]
    partial class Initial
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.6")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("GestaoProjeto.Domain.Entities.Departamento", b =>
                {
                    b.Property<int>("DepartamentoId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("DepartamentoId"));

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.HasKey("DepartamentoId");

                    b.ToTable("Departamento", (string)null);
                });

            modelBuilder.Entity("GestaoProjeto.Domain.Entities.Funcionario", b =>
                {
                    b.Property<int>("FuncionarioId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("FuncionarioId"));

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<int?>("SupervisorId")
                        .HasColumnType("int");

                    b.HasKey("FuncionarioId");

                    b.HasIndex("SupervisorId");

                    b.ToTable("Funcionario", (string)null);
                });

            modelBuilder.Entity("GestaoProjeto.Domain.Entities.Participacao", b =>
                {
                    b.Property<int>("ParticipacaoId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ParticipacaoId"));

                    b.Property<int>("DepartamentoId")
                        .HasColumnType("int");

                    b.Property<int>("FuncionarioId")
                        .HasColumnType("int");

                    b.Property<int>("ProjetoId")
                        .HasColumnType("int");

                    b.HasKey("ParticipacaoId");

                    b.HasIndex("FuncionarioId");

                    b.HasIndex("ProjetoId");

                    b.HasIndex("DepartamentoId", "FuncionarioId", "ProjetoId")
                        .IsUnique()
                        .HasDatabaseName("IDX_DepartamentoId_FuncionarioId_ProjetoId");

                    b.ToTable("Participacao", (string)null);
                });

            modelBuilder.Entity("GestaoProjeto.Domain.Entities.Projeto", b =>
                {
                    b.Property<int>("ProjetoId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ProjetoId"));

                    b.Property<int>("DepartamentoId")
                        .HasColumnType("int");

                    b.Property<string>("Descricao")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.HasKey("ProjetoId");

                    b.HasIndex("DepartamentoId");

                    b.ToTable("Projeto", (string)null);
                });

            modelBuilder.Entity("GestaoProjeto.Domain.Entities.Funcionario", b =>
                {
                    b.HasOne("GestaoProjeto.Domain.Entities.Funcionario", "Supervisor")
                        .WithMany("Funcionarios")
                        .HasForeignKey("SupervisorId");

                    b.Navigation("Supervisor");
                });

            modelBuilder.Entity("GestaoProjeto.Domain.Entities.Participacao", b =>
                {
                    b.HasOne("GestaoProjeto.Domain.Entities.Departamento", "Departamento")
                        .WithMany("Participacoes")
                        .HasForeignKey("DepartamentoId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("GestaoProjeto.Domain.Entities.Funcionario", "Funcionario")
                        .WithMany("Participacoes")
                        .HasForeignKey("FuncionarioId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("GestaoProjeto.Domain.Entities.Projeto", "Projeto")
                        .WithMany("Participacoes")
                        .HasForeignKey("ProjetoId")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.Navigation("Departamento");

                    b.Navigation("Funcionario");

                    b.Navigation("Projeto");
                });

            modelBuilder.Entity("GestaoProjeto.Domain.Entities.Projeto", b =>
                {
                    b.HasOne("GestaoProjeto.Domain.Entities.Departamento", "Departamento")
                        .WithMany("Projetos")
                        .HasForeignKey("DepartamentoId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Departamento");
                });

            modelBuilder.Entity("GestaoProjeto.Domain.Entities.Departamento", b =>
                {
                    b.Navigation("Participacoes");

                    b.Navigation("Projetos");
                });

            modelBuilder.Entity("GestaoProjeto.Domain.Entities.Funcionario", b =>
                {
                    b.Navigation("Funcionarios");

                    b.Navigation("Participacoes");
                });

            modelBuilder.Entity("GestaoProjeto.Domain.Entities.Projeto", b =>
                {
                    b.Navigation("Participacoes");
                });
#pragma warning restore 612, 618
        }
    }
}
